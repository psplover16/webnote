import{r,o as t,c as o,a as i,b as c,t as u,n as d,d as _,e as p,g as a}from"./index-tSkvA3aN.js";const v={key:0,type:"I"},h=p(`<li> cookie <ul><li>只有4K大小</li><li>由伺服器發送到客戶端並保存在客戶端的小型文字文件</li><li>以設定 Cookie 的過期時間，可以在不同頁面之間共用數據</li><li>與server溝通時，會把用到的cookie全部丟給server (幾乎都是後端控制)</li><li><pre>fetch(&#39;https://example.com/api/data&#39;, {
  method: &#39;GET&#39;,
  credentials: &#39;include&#39;
})
            </pre><ul>credentials <li>omit，預設值，不攜帶</li><li>same-origin 表示請求只會在當前域下發送，會攜帶當前域下符合條件的cookie</li><li>include&#39;表示請求會攜帶所有符合條件的Cookie，不僅限於當前域</li></ul></li><li> form的方式，會自動將cookie添加至請求 </li></ul></li><li> SessionStorage，資料儲存至關閉頁面會瀏覽器清除 <ul><li>5MB</li><li>sessionStorage.setItem(&#39;key&#39;, &#39;value&#39;);</li><li>const data = sessionStorage.getItem(&#39;key&#39;);</li><li>sessionStorage.removeItem(&#39;key&#39;);</li></ul></li><li> LocalStorage，儲存至清除 <ul><li>5MB</li><li>localStorage.setItem(&#39;key&#39;, &#39;value&#39;);</li><li> const data = localStorage.getItem(&#39;key&#39;);</li><li> localStorage.removeItem(&#39;key&#39;);</li></ul></li>`,3),S=[h],g={__name:"ch1",props:{title:String},setup(s){const e=r(!1);return(n,l)=>(t(),o("div",null,[i("h2",{onClick:l[0]||(l[0]=m=>e.value=!e.value)},[c(u(s.title)+" ",1),i("div",{class:d(["isShow",e.value?"":"rotate180"])},"^",2)]),e.value?(t(),o("ol",v,S)):_("",!0)]))}},f={key:0,type:"I"},k=p(`<li>CORS，伺服器設置CORS，標準安全方式，伺服器端設定 CORS 頭部來允許特定來源存取資源。</li><li>JSONP，在script的src建立請求，限定服務器要支援且限定GET</li><li>代理伺服器，在同源伺服器上建立一個代理接口，將請求轉送到目標伺服器。</li><li> Iframe， 透過 &lt;iframe&gt; 載入跨網域的內容，雖然頁面本身仍然受到同源策略的限制，但在 &lt;iframe&gt; 中載入的內容是由目標伺服器傳回的，不受同源策略的限制。 因此，可以利用 &lt;iframe&gt; 載入跨域的內容來繞過同源策略限制。 <br> iframe溝通，postmessage <ul><li> 父 <pre>   const iframe = document.getElementById(&#39;myFrame&#39;);
   iframe.contentWindow.postMessage(&#39;Hello from parent&#39;, &#39;http://example.com&#39;);
            </pre></li><li> 子 <pre>  window.addEventListener(&#39;message&#39;, event =&gt; {
  if (event.origin === &#39;http://example.com&#39;) {
    console.log(&#39;Message from parent:&#39;, event.data);
    // 发送响应
    event.source.postMessage(&#39;Hello from child&#39;, event.origin);
  }
  });
            </pre></li></ul></li><li>WebSocket，WebSocket 不受同源策略的限制，可以直接進行跨域通訊。</li><li>Nginx 反向代理，有一個中間代理的概念</li>`,6),w=[k],V={__name:"ch2",props:{title:String},setup(s){const e=r(!1);return(n,l)=>(t(),o("div",null,[i("h2",{onClick:l[0]||(l[0]=m=>e.value=!e.value)},[c(u(s.title)+" ",1),i("div",{class:d(["isShow",e.value?"":"rotate180"])},"^",2)]),e.value?(t(),o("ol",f,w)):_("",!0)]))}},M={key:0,type:"I"},y=p("<li> MVC <ul><li>Model，負責程式邏輯</li><li>View，用戶介面的顯示，</li><li> Controller，接收用戶的輸入並根據輸入更新Model與View，為兩者的中介 </li></ul> View透過model呈現資料給user，user透過controller觸發事件，model接收事件調整DB，調整完畢後再通知View更新事件 </li><li> MVVM，比起MVC更注重使用者端的的介面。能實現雙向綁定 <ul><li>Model，負責程式邏輯</li><li>ViewModule，轉換原始資料為顯示用資料</li><li>View，用戶介面的顯示，</li></ul> View透過ViewModle渲染頁面；當user操作介面時，View接收資料給ViewModel，ViewModel呼叫Model處理資料；model處理完畢後，呼叫ViewModel更新資料，ViewModel資料變動，觸發View更改頁面 </li>",2),$=[y],C={__name:"ch3",props:{title:String},setup(s){const e=r(!1);return(n,l)=>(t(),o("div",null,[i("h2",{onClick:l[0]||(l[0]=m=>e.value=!e.value)},[c(u(s.title)+" ",1),i("div",{class:d(["isShow",e.value?"":"rotate180"])},"^",2)]),e.value?(t(),o("ol",M,$)):_("",!0)]))}},I={key:0,type:"I"},x=i("li",null," _name_，表示變數 ",-1),b=i("li",null," str(obj)，表示function的寫法 ",-1),B=i("li",null," flask，表示python用來寫html的套件 ",-1),N=[x,b,B],E={__name:"ch4",props:{title:String},setup(s){const e=r(!1);return(n,l)=>(t(),o("div",null,[i("h2",{onClick:l[0]||(l[0]=m=>e.value=!e.value)},[c(u(s.title)+" ",1),i("div",{class:d(["isShow",e.value?"":"rotate180"])},"^",2)]),e.value?(t(),o("ol",I,N)):_("",!0)]))}},O={key:0,type:"I"},L=p('<li>原子序-質子數量</li><li>價電子-最外圈的電子</li><li>每圈電子數量2n²</li><li class="r">質子質量為電子的1840倍</li><li>導體-價電子&lt;4; 半導體-價電子=4;</li><li>價電子又稱束縛電子，若有足夠能量給他，會變自由電子</li><li class="r">自由電子密度 : -10²⁹個/m³</li><li>游離，價電子受外面能量而使其脫離原子的過程</li><li> 正離子，電中性原子失去電子，帶正電 <br> 負離子，電中性原子獲得電子，帶負電 </li><li></li><li>分子/原子/質子/中子/電子/價電子/自由電子/束縛電子/正離子/負離子</li>',11),R=[L],T={__name:"ch5",props:{title:String},setup(s){const e=r(!1);return(n,l)=>(t(),o("div",null,[i("h2",{onClick:l[0]||(l[0]=m=>e.value=!e.value)},[c(u(s.title)+" ",1),i("div",{class:d(["isShow",e.value?"":"rotate180"])},"^",2)]),e.value?(t(),o("ol",O,R)):_("",!0)]))}},D={__name:"webpage",setup(s){return(e,n)=>(t(),o("div",null,[a(g,{title:"cookie / SessionStorage / LocalStorage"}),a(V,{title:"跨域問題"}),a(C,{title:"MVC VS MVVM"}),a(E,{title:"奇怪的問題"}),a(T,{title:""})]))}};export{D as default};
